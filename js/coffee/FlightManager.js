// Generated by CoffeeScript 1.6.1
(function() {
  var Flight;

  window.FlightManager = (function() {
    var airportMap, avinorAirportUrl, avinorFlightUrl, flightArray, instance, instanceNum;

    function FlightManager() {}

    instance = new FlightManager;

    instanceNum = 0;

    flightArray = new Array();

    airportMap = new Array();

    avinorFlightUrl = new FlightUrlBuilder('http://freberg.org/xmlproxy.php?url=', 'http://flydata.avinor.no/XmlFeed.asp?', 'OSL').timeFrom(0).timeTo(24).direction('D').build();

    avinorAirportUrl = new FlightUrlBuilder('http://freberg.org/xmlproxy.php?url=', 'http://flydata.avinor.no/airportNames.asp?', '').build();

    FlightManager.prototype.fetchFlights = function(successCallback, errorCallback) {
      if (!window.navigator.onLine) {
        if (errorCallback != null) {
          return errorCallback('Er ikke koblet til internett. Kan ikke hente fly informasjon.');
        }
      }
      return jQuery.ajax({
        url: avinorFlightUrl,
        dataType: 'jsonp',
        jsonp: 'jsonp',
        jsonpCallback: 'jsonCallback',
        error: function(a, b, e) {
          if (errorCallback != null) {
            return errorCallback(e);
          }
        },
        success: function(data) {
          var f, tmpFlight, _i, _len, _ref, _results;
          flightArray = new Array();
          try {
            _ref = data['flights']['flight'];
            _results = [];
            for (_i = 0, _len = _ref.length; _i < _len; _i++) {
              f = _ref[_i];
              tmpFlight = new Flight(f);
              _results.push(flightArray.push(tmpFlight));
            }
            return _results;
          } catch (error) {
            return errorCallback('Feilet ved henting av fly');
          }
        },
        complete: function() {
          try {
            if (flightArray != null) {
              flightArray.sort(function(one, two) {
                if (one.flightId < two.flightId) {
                  return -1;
                } else if (one.flightId > two.flightId) {
                  return 1;
                } else {
                  return 0;
                }
              });
            }
          } catch (error) {
            return errorCallback('Feilet ved henting av fly');
          }
          if (successCallback != null) {
            return successCallback(flightArray);
          }
        }
      });
    };

    FlightManager.prototype.getFlightsById = function(id, count) {
      var e, num, tmpLst, _i, _len;
      if (flightArray == null) {
        throw new Error('Har ikke hentet ned flyinformasjon');
      }
      tmpLst = new Array();
      id = id.toUpperCase().trim();
      num = 0;
      for (_i = 0, _len = flightArray.length; _i < _len; _i++) {
        e = flightArray[_i];
        if (id === e.flightId.substring(0, id.length)) {
          tmpLst.push(e);
          num++;
        }
        if (num >= count) {
          break;
        }
      }
      return tmpLst;
    };

    FlightManager.prototype.getAirportNameById = function(id, callback, errorCallback) {
      var airport;
      try {
        id = id.toUpperCase().trim();
        airport = airportMap[id];
        if (airport == null) {
          return this._fetchAirportNameById(id, callback, errorCallback);
        } else {
          return callback(airport);
        }
      } catch (error) {
        airportMap[id] = id;
        if (errorCallback != null) {
          errorCallback('Feil ved henting av flyplass, bruker flyplass kode');
        }
        if (callback != null) {
          return callback(id);
        }
      }
    };

    FlightManager.prototype._fetchAirportNameById = function(id, successCallback, errorCallback) {
      var dataHolder;
      if (!window.navigator.onLine) {
        if (errorCallback != null) {
          errorCallback('Er ikke koblet til internett, bruker flyplass kode');
        }
        if (successCallback != null) {
          successCallback(id);
        }
      }
      dataHolder = "";
      return jQuery.ajax({
        url: avinorAirportUrl + id,
        dataType: 'jsonp',
        jsonp: 'jsonp',
        jsonpCallback: 'jsonCallback',
        error: function(a, b, e) {
          if (errorCallback != null) {
            return errorCallback(b);
          }
        },
        success: function(responseData) {
          return dataHolder = responseData;
        },
        complete: function() {
          var airportName, tmp;
          airportName = id;
          try {
            tmp = dataHolder['airportName']['@attributes']['name'];
            airportMap[id] = tmp;
            airportName = tmp;
          } catch (error) {
            if (errorCallback != null) {
              errorCallback('Feil ved henting av flyplass, bruker flyplass kode');
            }
          }
          if (successCallback != null) {
            return successCallback(airportName);
          }
        }
      });
    };

    FlightManager.getInstance = function() {
      return instance;
    };

    return FlightManager;

  })();

  Flight = (function() {

    function Flight(flightObject) {
      var day, hours, minutes, month;
      this.uniqueId = flightObject['@attributes']['uniqueID'];
      this.flightId = flightObject['flight_id'].toUpperCase();
      this.dom_int = flightObject['dom_int'];
      this.scheduled_time_date = new Date(flightObject['schedule_time']);
      minutes = this.scheduled_time_date.getMinutes();
      hours = this.scheduled_time_date.getHours();
      day = this.scheduled_time_date.getDay();
      month = this.scheduled_time_date.getMonth();
      if (minutes < 10) {
        minutes = "0" + minutes;
      }
      if (hours < 10) {
        hours = "0" + hours;
      }
      if (day < 10) {
        day = "0" + day;
      }
      if (month < 10) {
        month = "0" + month;
      }
      this.schedule_time = "Kl: " + hours + ":" + minutes + " - " + day + "/" + month;
      this.arr_dep = flightObject['arr_dep'];
      this.airport = flightObject['airport'];
      this.via_airport(flightObject);
      this.check_in(flightObject);
      this.gate(flightObject);
      this.status(flightObject);
    }

    Flight.prototype.getRuterFlightFormat = function() {
      var day, hour, minutes, month, year;
      day = this.scheduled_time_date.getDate();
      month = parseInt(this.scheduled_time_date.getMonth()) + 1;
      year = this.scheduled_time_date.getFullYear();
      hour = this.scheduled_time_date.getHours();
      minutes = this.scheduled_time_date.getMinutes();
      if (day < 10) {
        day = "0" + day;
      }
      if (month < 10) {
        month = "0" + month;
      }
      if (hour < 10) {
        hour = "0" + hour;
      }
      if (minutes < 10) {
        minutes = "0" + minutes;
      }
      return day + month + year + hour + minutes;
    };

    Flight.prototype.via_airport = function(val) {
      if (val['airport'] != null) {
        this.via_airport = val['airport'];
      } else {
        this.via_airport = "";
      }
      return this;
    };

    Flight.prototype.check_in = function(val) {
      if (val['check_in'] != null) {
        this.check_in = val['check_in'];
      } else {
        this.check_in = "";
      }
      return this;
    };

    Flight.prototype.gate = function(val) {
      if (val['gate'] != null) {
        this.gate = val['gate'];
      } else {
        this.gate = "";
      }
      return this;
    };

    Flight.prototype.status = function(val) {
      var code, time;
      if (val['status'] != null) {
        code = val.status['@attributes'].code;
        time = val.status['@attributes'].time;
        if (code == null) {
          code = "";
        }
        if (time == null) {
          time = "";
        }
        this.status_code = code;
        this.status_time = time;
      } else {
        this.status_code = "";
        this.status_time = "";
      }
      return this;
    };

    return Flight;

  })();

}).call(this);

// Generated by CoffeeScript 1.6.2
(function() {
  var TrainStation;

  TrainStation = (function() {
    function TrainStation(trainStation) {
      this.id = trainStation['id'];
      this.name = trainStation["name"];
      this.x = trainStation["x"];
      this.y = trainStation["y"];
      this.latitude = trainStation["latitude"];
      this.longitude = trainStation["longitude"];
    }

    return TrainStation;

  })();

  window.TrainStationManager = (function() {
    var instance, trainStationArray;

    trainStationArray = new Array();

    instance = new TrainStationManager();

    function TrainStationManager() {}

    TrainStationManager.prototype.fetchAllTrainStations = function() {
      return jQuery.ajax({
        url: "json/airporttrain_stations.json",
        async: false,
        dataType: 'json',
        success: function(json) {
          var error, stationInfo, ts, _i, _len, _results;

          try {
            _results = [];
            for (_i = 0, _len = json.length; _i < _len; _i++) {
              stationInfo = json[_i];
              ts = new TrainStation(stationInfo);
              _results.push(trainStationArray.push(ts));
            }
            return _results;
          } catch (_error) {
            error = _error;
            return console.log(error);
          }
        }
      });
    };

    TrainStationManager.prototype.getClosestTrainStation = function(lat, long) {
      var closestDistance, closestStation, distance, e, _i, _len;

      if (trainStationArray.length === 0) {
        fetchAllTrainStations();
      }
      closestStation = null;
      closestDistance = -1;
      for (_i = 0, _len = trainStationArray.length; _i < _len; _i++) {
        e = trainStationArray[_i];
        distance = instance.getGeometricalDistanceFrom(e, lat, long);
        if (closestDistance < 0 || distance <= closestDistance) {
          closestStation = e;
          closestDistance = distance;
        }
      }
      return closestStation;
    };

    TrainStationManager.prototype.getGeometricalDistanceFrom = function(station, lat, long) {
      var deltaLatitude, deltaLongitude;

      deltaLatitude = station.latitude - lat;
      deltaLongitude = station.longitude - long;
      return Math.sqrt(Math.pow(deltaLatitude, 2) + Math.pow(deltaLongitude, 2));
    };

    TrainStationManager.getInstance = function() {
      return instance;
    };

    TrainStationManager.prototype.getAllTrainStations = function() {
      return trainStationArray;
    };

    return TrainStationManager;

  })();

}).call(this);

// Generated by CoffeeScript 1.6.2
/*

File name: TrainStation.coffee
Last updated: March 25th, 2013
Version: 1.0

Description:
  A train station is defined by its ID, name and position (both geographical and UTM coordinates). It contains one
  method, closestTo(), for setting the object's attributes to the closest airport train station based on a specific
  latitude/longitude pair. It also provides a reset method. When either method is called, the object's onUpdated
  callback will be called in order to allow GUI to be updated, etc.

Usage example:

  onStationUpdate = ( station ) =>
    console.log( station.name )

  station = new TrainStation( onStationUpdate )
  station.closestTo( 60, 11 )
*/


(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  window.TrainStation = (function() {
    TrainStation.id;

    TrainStation.name;

    TrainStation.x;

    TrainStation.y;

    TrainStation.latitude;

    TrainStation.longitude;

    function TrainStation(onUpdated) {
      this.onUpdated = onUpdated;
      this._getGeometricalDistanceFrom = __bind(this._getGeometricalDistanceFrom, this);
      this._setInformation = __bind(this._setInformation, this);
      this._saveClosestTrainStationInformation = __bind(this._saveClosestTrainStationInformation, this);
      this._notifyUpdated = __bind(this._notifyUpdated, this);
      this.closestTo = __bind(this.closestTo, this);
      this.reset = __bind(this.reset, this);
      this.reset();
    }

    TrainStation.prototype.reset = function() {
      this.id = -1;
      this.name = "Ukjent stasjon";
      this.x = 0;
      this.y = 0;
      this.latitude = 0.0;
      this.longitude = 0.0;
      return this._notifyUpdated();
    };

    TrainStation.prototype.closestTo = function(latitude, longitude) {
      this.latitude = latitude;
      this.longitude = longitude;
      return jQuery.getJSON("json/airporttrain_stations.json", this._saveClosestTrainStationInformation);
    };

    TrainStation.prototype._notifyUpdated = function() {
      if ((this.onUpdated != null)) {
        return this.onUpdated(this);
      }
    };

    TrainStation.prototype._saveClosestTrainStationInformation = function(stations) {
      var closestDistance, closestStationInformation, distance, latitude, longitude, stationInformation, _i, _len;

      latitude = this.latitude;
      longitude = this.longitude;
      closestStationInformation = null;
      closestDistance = -1;
      for (_i = 0, _len = stations.length; _i < _len; _i++) {
        stationInformation = stations[_i];
        this._setInformation(stationInformation);
        distance = this._getGeometricalDistanceFrom(latitude, longitude);
        if (closestDistance < 0 || distance <= closestDistance) {
          closestStationInformation = stationInformation;
          closestDistance = distance;
        }
      }
      this._setInformation(closestStationInformation);
      return this._notifyUpdated();
    };

    TrainStation.prototype._setInformation = function(information) {
      this.id = information["id"];
      this.name = information["name"];
      this.x = information["x"];
      this.y = information["y"];
      this.latitude = information["latitude"];
      return this.longitude = information["longitude"];
    };

    TrainStation.prototype._getGeometricalDistanceFrom = function(latitude, longitude) {
      var deltaLatitude, deltaLongitude;

      deltaLatitude = this.latitude - latitude;
      deltaLongitude = this.longitude - longitude;
      return Math.sqrt(Math.pow(deltaLatitude, 2), Math.pow(deltaLongitude, 2));
    };

    return TrainStation;

  })();

}).call(this);

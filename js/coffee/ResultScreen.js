// Generated by CoffeeScript 1.6.2
(function() {
  window.ResultScreen = (function() {
    var uiFlightInfo, uiTrainTable;

    function ResultScreen() {}

    uiTrainTable = '#trainTable';

    uiFlightInfo = '#flightInfo';

    ResultScreen.prototype.showTrainInResultList = function(flightObject, trainArray) {
      var airportTime, arrTime, colorForTrain, depTime, t, table, tbody, travelTime, _i, _len;

      if (flightObject != null) {
        console.log("Flight from resultscreen: " + flightObject);
        $(uiFlightInfo).html('');
        console.dir(flightObject);
        $(uiFlightInfo).html('<label id="resultFlightContent">' + flightObject.flightId + ' - ' + flightObject.schedule_time + ' - ' + flightObject.airport + '</label>');
      }
      if (trainArray != null) {
        console.dir(trainArray);
        $("#trainTableWrapper").html("");
        $(".resultTrainHeader").html("Avganger fra: <br/>" + trainArray[0].departureStation);
        table = '<table id="trainTable"><thead>\
          <tr>\
            <th data-priority="2">Avgang</th>\
            <th data-priority="3">Ankomst</th>\
            <th data-priority="4">Reisetid</th>\
            <th data-priority="5">Tilgode</th>\
          </tr>\
        </thead>';
        tbody = table + '<tbody>';
        for (_i = 0, _len = trainArray.length; _i < _len; _i++) {
          t = trainArray[_i];
          if (t != null) {
            depTime = this.createShortDate(t.departureTime);
            arrTime = this.createShortDate(t.arrivalTime);
            travelTime = this.calculateTravelTime(t.arrivalTime, t.departureTime);
            airportTime = this.calculateAirportTime(t.arrivalTime, flightObject.scheduled_time_date);
            colorForTrain = this.decideColorForTrain(airportTime);
            tbody += '<tr><td>' + depTime + '</td><td>' + arrTime + '</td><td>' + travelTime + '</td><td style="background-color: ' + colorForTrain + ';">' + airportTime + 'min</td></tr>';
            console.log(t.arrivalStation);
          } else {
            console.log("TRAINS_TO_SHOW VAR UDEFINERT");
          }
        }
        tbody += '</tbody></table>';
        return $("#trainTableWrapper").append(tbody);
      } else {
        return console.log("Hide hele tabellen, vis en feilmelding");
      }
    };

    ResultScreen.prototype.calculateTravelTime = function(startTime, endTime) {
      var travelTime;

      travelTime = endTime.getTime() - startTime.getTime();
      travelTime = travelTime / (1000 * 60);
      return Math.abs(travelTime) + "min";
    };

    ResultScreen.prototype.calculateAirportTime = function(arrivalTime, flightDepartureTime) {
      var airportTime;

      airportTime = flightDepartureTime.getTime() - arrivalTime.getTime();
      airportTime = airportTime / (1000 * 60);
      return Math.abs(airportTime);
    };

    ResultScreen.prototype.decideColorForTrain = function(airportTime) {
      var color;

      color = null;
      if (airportTime >= 60) {
        color = "#78AB46";
      } else if (airportTime >= 45 && airportTime < 60) {
        color = "#E6F246";
      } else if (airportTime < 45 && airportTime >= 0) {
        color = "#F24738";
      }
      return color;
    };

    ResultScreen.prototype.createShortDate = function(date) {
      var day, hours, minutes, month, time;

      minutes = date.getMinutes();
      hours = date.getHours();
      day = date.getDay();
      month = date.getMonth() + 1;
      if (minutes < 10) {
        minutes = "0" + minutes;
      }
      if (hours < 10) {
        hours = "0" + hours;
      }
      if (day < 10) {
        day = "0" + day;
      }
      if (month < 10) {
        month = "0" + month;
      }
      time = hours + ":" + minutes;
      return time;
    };

    return ResultScreen;

  })();

}).call(this);

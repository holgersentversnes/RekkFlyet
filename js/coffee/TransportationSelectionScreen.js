// Generated by CoffeeScript 1.6.2
(function() {
  window.TransportationSelectionScreen = (function() {
    var FLIGHT_LIST_MAX_COUNT, currentFlight, currentSearchValue, currentTrainStationId, errorReporter, flightManager, geoLocationManager, instance, trainManager, trainStationManager, uiBaggageCheckinId, uiBaggageDivId, uiBaggageNonCheckinId, uiClosestTrainStationButton, uiFlightListId, uiFlightNotificationLabelId, uiFlightSearchDivId, uiFlightSearchId, uiSearchButton, uiTrainDropDown, uiTrainDropDownDiv;

    FLIGHT_LIST_MAX_COUNT = 5;

    uiFlightListId = '#flightList';

    uiFlightSearchId = '#searchFlights';

    uiFlightSearchDivId = '#StartPageFlightContent';

    uiFlightNotificationLabelId = '#flightNotificationLabel';

    uiBaggageDivId = '#StartPageBaggageContent';

    uiBaggageCheckinId = '#baggage_checkin';

    uiBaggageNonCheckinId = '#baggage_nocheckin';

    uiTrainDropDown = '#trainDropDown';

    uiTrainDropDownDiv = '#trainDropDownDiv';

    uiSearchButton = '#searchButton';

    uiClosestTrainStationButton = '#locateTrainStationButton';

    instance = new TransportationSelectionScreen();

    flightManager = FlightManager.getInstance();

    trainManager = TrainManager.getInstance();

    geoLocationManager = GeoLocationManager.getInstance();

    trainStationManager = TrainStationManager.getInstance();

    errorReporter = null;

    currentSearchValue = "1";

    currentFlight = null;

    currentTrainStationId = "0";

    function TransportationSelectionScreen() {}

    TransportationSelectionScreen.prototype.fillTrainDropDown = function() {
      var e, _i, _len, _ref;

      $(uiTrainDropDown).empty();
      $(uiTrainDropDown).append('<option value="0" selected="selected">Velg togstasjon...</option>');
      _ref = trainStationManager.getAllTrainStations();
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        e = _ref[_i];
        $(uiTrainDropDown).append('<option value="' + e.id + '">' + e.name + '</option>');
      }
      $('#trainDropDown').selectmenu();
      return $('#trainDropDown').selectmenu('refresh', true);
    };

    TransportationSelectionScreen.prototype.onFlightSearchChange = function(newVal) {
      var e, error, newFlights, _i, _len;

      if ((newVal == null) || (flightManager == null)) {
        if ((errorReporter != null) || errorReporter(!null)) {
          errorReporter("Verdi eller fly er udefinert.");
        }
      }
      try {
        newVal = newVal.trim();
        newVal = newVal.toUpperCase();
        if (newVal === currentSearchValue && newVal.length === 0) {
          return;
        }
        $(uiFlightListId).undelegate('li', 'click');
        $(uiFlightListId).empty();
        $(uiFlightNotificationLabelId).text('');
        if (newVal.length === 0 || !$(uiFlightSearchDivId).is(':visible')) {
          return;
        }
        newFlights = flightManager.getFlightsByFlightId(newVal, FLIGHT_LIST_MAX_COUNT);
        if (newFlights.length === FLIGHT_LIST_MAX_COUNT) {
          $(uiFlightNotificationLabelId).text('Rafiner sÃ¸ket for flere resultater');
        } else if (newFlights.length === 0) {
          $(uiFlightNotificationLabelId).text('Fant ingen fly med koden ' + newVal);
        } else if (newFlights.length === 1 && currentSearchValue !== newVal && newVal.length > currentSearchValue.length) {
          currentSearchValue = newFlights[0].flightId;
          instance.onFlightSelected(flightManager.getFlightByUniqueId(newFlights[0].uniqueId));
          return;
        }
        for (_i = 0, _len = newFlights.length; _i < _len; _i++) {
          e = newFlights[_i];
          if (e != null) {
            $(uiFlightListId).append('<li id=' + e.uniqueId + '><table class="flightSearchResultElement"><tr><td>' + e.flightId + '</td><td>' + e.schedule_time + '</td><td>' + e.airport + '</td></tr></table></li>');
          }
        }
        $(uiFlightListId).listview('refresh');
        currentSearchValue = newVal;
        return $(uiFlightListId).delegate('li', 'click', function(selected) {
          var flight;

          selected = selected['currentTarget']['id'];
          flight = flightManager.getFlightByUniqueId(selected);
          return instance.onFlightSelected(flight);
        });
      } catch (_error) {
        error = _error;
        return console.log(error);
      }
    };

    TransportationSelectionScreen.prototype.onFlightSelected = function(flight) {
      console.log("onFlightSelected");
      currentFlight = flight;
      currentSearchValue = flight.flightId;
      $(uiFlightSearchId).val(flight.flightId);
      this.hideFlightSelection();
      this.showBaggageSelection();
      this.showTrainStationSelection();
      console.log("Current Flight Unique ID: " + flight.uniqueId);
      return $(uiFlightSearchId).on('keyup', function() {
        var newVal;

        newVal = $(uiFlightSearchId).val().trim();
        if (newVal !== currentSearchValue) {
          return instance.reset();
        }
      });
    };

    TransportationSelectionScreen.prototype.showFlightSelection = function() {
      $(uiFlightSearchDivId).show();
      $(uiFlightSearchId).unbind('keyup');
      $(uiFlightSearchId).on('keyup', function(element) {
        var newValue;

        newValue = $(uiFlightSearchId).val();
        return instance.onFlightSearchChange(newValue);
      });
      instance.onFlightSearchChange("");
      return currentFlight = null;
    };

    TransportationSelectionScreen.prototype.hideFlightSelection = function() {
      $(uiFlightSearchDivId).hide();
      $(uiFlightSearchId).unbind('keyup');
      $(uiFlightListId).empty();
      return $(uiFlightListId).listview('refresh');
    };

    TransportationSelectionScreen.prototype.reset = function() {
      $(uiSearchButton).off('click');
      $(uiClosestTrainStationButton).off('click');
      $(uiTrainDropDown).off('change.stationChange');
      currentSearchValue = "1";
      currentFlight = null;
      currentTrainStationId = "0";
      instance.showFlightSelection();
      instance.hideBaggageSelection();
      instance.hideTrainStationSelection();
      instance.disableSearchButton();
      $(uiSearchButton).on('click', instance.onSearchButtonClick);
      $(uiClosestTrainStationButton).on('click', instance.onClosestTrainStationClick);
      $(uiTrainDropDown).on('change.stationChange', instance.onTrainDropDownChange);
      return instance.fillTrainDropDown();
    };

    TransportationSelectionScreen.prototype.onClosestTrainStationClick = function() {
      var closest, lat, long;

      lat = geoLocationManager.getCurrentLocation()['coords']['latitude'];
      long = geoLocationManager.getCurrentLocation()['coords']['longitude'];
      closest = trainStationManager.getClosestTrainStation(lat, long);
      $(uiTrainDropDown).val(closest.id);
      $('select').selectmenu('refresh', true);
      return instance.onTrainDropDownChange();
    };

    TransportationSelectionScreen.prototype.onTrainDropDownChange = function() {
      if ($(uiTrainDropDown).val() === "0") {
        return instance.disableSearchButton();
      } else {
        currentTrainStationId = $(uiTrainDropDown).val();
        console.log("TSID: " + currentTrainStationId);
        return instance.enableSearchButton();
      }
    };

    TransportationSelectionScreen.prototype.onSearchButtonClick = function() {
      if ((currentFlight != null) && !$(uiSearchButton).prop('disabled') && currentTrainStationId !== "0") {
        $.mobile.loading('show', {
          text: 'Henter toginformasjon',
          textVisible: true,
          theme: 'c',
          html: ""
        });
        return flightManager.getAirportNameById(currentFlight.airport, instance.onSearchButtonClickAirportSuccess, instance.onSearchButtonClickError);
      }
    };

    TransportationSelectionScreen.prototype.onSearchButtonClickAirportSuccess = function(airportName) {
      console.log(airportName);
      currentFlight.airportName = airportName;
      console.log("TSID SAMME: " + currentTrainStationId);
      return trainManager.fetchTrains(currentTrainStationId, currentFlight, instance.onSearchButtonClickTrainSuccess, instance.onSearchButtonClickError);
    };

    TransportationSelectionScreen.prototype.onSearchButtonClickError = function(message) {
      console.log(message);
      if ((errorReporter != null) && errorReporter !== null) {
        errorReporter('Feilet ved henting av toginformasjon');
      }
      return $.mobile.loading('hide');
    };

    TransportationSelectionScreen.prototype.onSearchButtonClickTrainSuccess = function(trainArray) {
      var rs;

      rs = new ResultScreen();
      rs.showTrainInResultList(currentFlight, trainArray);
      $.mobile.loading('hide');
      return window.location.hash = "#page2";
    };

    TransportationSelectionScreen.getInstance = function() {
      return instance;
    };

    TransportationSelectionScreen.prototype.showBaggageSelection = function() {
      return $(uiBaggageDivId).show();
    };

    TransportationSelectionScreen.prototype.hideBaggageSelection = function() {
      return $(uiBaggageDivId).hide();
    };

    TransportationSelectionScreen.prototype.showTrainStationSelection = function() {
      return $(uiTrainDropDownDiv).show();
    };

    TransportationSelectionScreen.prototype.hideTrainStationSelection = function() {
      return $(uiTrainDropDownDiv).hide();
    };

    TransportationSelectionScreen.prototype.enableSearchButton = function() {
      return $(uiSearchButton).removeClass('ui-disabled');
    };

    TransportationSelectionScreen.prototype.disableSearchButton = function() {
      return $(uiSearchButton).addClass('ui-disabled');
    };

    return TransportationSelectionScreen;

  })();

}).call(this);
